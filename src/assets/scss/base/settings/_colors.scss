@charset "UTF-8";

$colors: (
    'primary': (
        'base': #4694ff,
        'light': light(#4694ff, 20%),
        'dark': shade(#4694ff, 20%)
    ),
    'support': (
        'base': #f45d3a,
        'light': light(#f45d3a, 20%),
        'dark': shade(#f45d3a, 20%)
    ),
    'action': (
        'base': #43c85c,
        'light': light(#43c85c, 20%),
        'dark': shade(#43c85c, 20%)
    ),
    'error': (
        'base': #DC3939,
        'light': light(#DC3939, 20%),
        'dark': shade(#DC3939, 20%)
    ),
    'warning': (
        'base': #ff9e13,
        'light': light(#ff9e13, 20%),
        'dark': shade(#ff9e13, 20%)
    ),
    'success': (
        'base': #92C865,
        'light': light(#92C865, 20%),
        'dark': shade(#92C865, 20%)
    ),
    'notice': (
        'base': #79A9FF,
        'light': light(#79A9FF, 20%),
        'dark': shade(#79A9FF, 20%)
    ),
    'body': (
        'base': #ffffff,
        'light': null,
        'dark': #e9e9e9
    ),
    'border': (
        'base': #bbbbbb,
        'light': #ededed,
        'dark': #959292
    ),
    'font': (
        'base': #555555,
        'light': #737373,
        'dark': #161616
    )
) !default;



/// Alias shorthand to get color value.
///
/// @param { String } $color
///     Get the property from a specific viewport.
///
/// @param { String } $tint
///     The tint to return from the specified $viewport
///
/// @return { Value }

@function color(
    $color: false,
    $tint: false
)
{
    @if ($color != false) and ($tint != false)
    {
        @return get-setting($colors, $color, $tint);
    }
}